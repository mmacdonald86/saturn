read -r -d '' USAGE <<'EOF'
Usage:
    bash build.sh master|nightly [push]
    bash build.sh dev|develop
EOF


set -o nounset
set -o pipefail

thisfile="${BASH_SOURCE[0]}"
thisdir="$( cd "$( dirname "${thisfile}" )" && pwd )"
if [[ "${thisdir}" != "$(pwd)" ]]; then
    echo Please change to the directory where `build.sh` is, and run it from there
    exit 1
fi

if [[ $# < 1 ]]; then
    echo "${USAGE}"
    exit 1
fi
task="$1"

echo
read -p 'Your github username: ' username
read -sp 'Your github password: ' passwd
echo
echo
gituser=${username}:${passwd}


# saturn:
#   stable `master` versions of `mars` and `saturn`
# saturn-nightly:
#   stable `master` version of `mars`, `develop` version of `saturn`
# saturn-dev:
#   stable `master` version of `mars`, local repo of `saturn`
# saturn-develop:
#   `develop` branch of `mars`, local repo of `saturn`

rm -f mars.tar.gz mars.zip
rm -f saturn.tar.gz saturn.zip
rm -f name version Dockerfile pyinstall.py
rm -rf mars saturn saturn-version


if [[ "${task}" == "master" ]]; then
    curl --user ${gituser} -s https://raw.githubusercontent.com/xadrnd/saturn/master/version -o saturn-version
    SATURN_VERSION=$(head -n 1 saturn-version)
    SATURN_VERSION=${SATURN_VERSION#saturn }
    SATURN_URL=https://github.com/xadrnd/saturn/archive/v${SATURN_VERSION}.tar.gz
    curl --user ${gituser} -skL --retry 3 ${SATURN_URL} -o saturn.tar.gz
    tar -xzf saturn.tar.gz
    mv saturn-${SATURN_VERSION} saturn

    MARS_VERSION=$(tail -n 1 saturn-version)
    MARS_VERSION=${MARS_VERSION#mars }
    MARS_URL=https://github.com/xadrnd/mars/archive/v${MARS_VERSION}.tar.gz
    curl --user ${gituser} -skL --retry 3 ${MARS_URL} -o mars.tar.gz
    tar -xzf mars.tar.gz
    mv mars-${MARS_VERSION} mars

    name=saturn
    version=${SATURN_VERSION}
elif [[ "${task}" == "nightly" ]]; then
    SATURN_URL=https://github.com/xadrnd/saturn/archive/develop.zip
    curl --user ${gituser} -skL --retry 3 ${SATURN_URL} -o saturn.zip
    unzip saturn.zip
    mv saturn-develop saturn

    MARS_VERSION=$(tail -n 1 saturn/version)
    MARS_VERSION=${MARS_VERSION#mars }
    MARS_URL=https://github.com/xadrnd/mars/archive/v${MARS_VERSION}.tar.gz
    curl --user ${gituser} -skL --retry 3 ${MARS_URL} -o mars.tar.gz
    tar -xzf mars.tar.gz
    mv mars-${MARS_VERSION} mars

    name=saturn-nightly
    version=$(date +%Y%m%d)
elif [[ "${task}" == "dev" ]]; then
    MARS_VERSION=$(tail -n 1 ../../version)
    MARS_VERSION=${MARS_VERSION#mars }
    MARS_URL=https://github.com/xadrnd/mars/archive/v${MARS_VERSION}.tar.gz
    curl --user ${gituser} -skL --retry 3 ${MARS_URL} -o mars.tar.gz
    tar -xzf mars.tar.gz
    mv mars-${MARS_VERSION} mars

    name=saturn-dev
    version=$(date +%Y%m%d)
else
    if [[ "${task}" != "develop" ]]; then
        echo "${USAGE}"
        exit 1
    fi
    MARS_URL=https://github.com/xadrnd/mars/archive/develop.zip
    curl --user ${gituser} -skL --retry 3 ${MARS_URL} -o mars.zip
    unzip mars.zip
    mv -f mars-develop mars

    name=saturn-develop
    version=$(date +%Y%m%d)
fi

if [[ "${name}" == "saturn" ]] || [[ "${name}" == "saturn-nightly" ]]; then
    if [[ $# > 1 ]]; then
        push="$2"
    else
        push=""
    fi
fi


echo "${name}" > ./name
echo "${version}" > ./version
NAME="${name}":"${version}"

parent_name="$(curl -skL https://raw.githubusercontent.com/zpz/docker/master/py3/name | cat)"
parent_version="$(curl -skL https://raw.githubusercontent.com/zpz/docker/master/py3/version | cat)"
PARENT="${parent_name}":"${parent_version}"

echo
echo Creating Dockerfile for ${NAME}
cat > ./Dockerfile <<EOF
# Dockerfile for image '${NAME}'
# Generated by 'build.sh'.

FROM ${PARENT}
USER root

COPY mars /tmp/mars
EOF

if [[ "${name}" == "saturn" ]] || [[ "${name}" == "saturn-nightly" ]]; then
    cat >> "./Dockerfile" <<EOF
COPY saturn /tmp/saturn
EOF
else
    cat >> "./Dockerfile" <<'EOF'

ARG ASTYLE_VERSION=3.1
ARG ASTYLE_URL=https://sourceforge.net/projects/astyle/files/astyle/astyle%20${ASTYLE_VERSION}/astyle_${ASTYLE_VERSION}_linux.tar.gz/download
EOF
fi

cat >> ./Dockerfile <<'EOF'

ARG RAPIDJSON_VERSION=1.1.0
ARG RAPIDJSON_URL=https://github.com/Tencent/rapidjson/archive/v${RAPIDJSON_VERSION}.tar.gz
ARG AVRO_VERSION=1.8.2
ARG AVRO_URL=http://apache.claz.org/avro/avro-${AVRO_VERSION}/avro-src-${AVRO_VERSION}.tar.gz

RUN echo "deb http://ftp.us.debian.org/debian testing main contrib non-free" >> /etc/apt/sources.list \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc-7 \
        g++-7 \
        libc6-dev \
        cmake \
        make \
    && ln -s /usr/bin/gcc-7 /usr/bin/gcc \
    && ln -s /usr/bin/g++-7 /usr/bin/g++ \
    \
    && curl -skL --retry 3 ${RAPIDJSON_URL} | tar xz -C /tmp \
    && mv /tmp/rapidjson-${RAPIDJSON_VERSION}/include/rapidjson /usr/local/include \
    \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        libboost-dev \
        libboost-regex-dev \
        libboost-filesystem-dev \
        libboost-iostreams-dev \
        libboost-system-dev \
        libboost-program-options-dev \
        flex \
        bison \
    && curl -skL --retry 3 ${AVRO_URL} | tar xz -C /tmp \
    && ( cd /tmp/avro-src-${AVRO_VERSION}/lang/c++ && ./build.sh test && ./build.sh install ) \
    && apt-get purge -y --auto-remove \
        flex \
        bison \
    \
    && cp -r /tmp/mars/include/mars /usr/local/include \
    && cp /tmp/mars/mars/version.py /usr/local/include/mars \
    \
EOF

if [[ "${name}" == "saturn" ]] || [[ "${name}" == "saturn-nightly" ]]; then
    cat >> ./Dockerfile << 'EOF'
    && cd /tmp/saturn && make clean && make \
    && cp -r /tmp/saturn/include/saturn /usr/local/include \
    && cp /tmp/saturn/version /usr/local/include/saturn \
    && mv /tmp/saturn/libsaturn.so /usr/local/lib \
    && mv /tmp/saturn/do_svr /usr/local/bin \
    && chmod +x /usr/local/bin/do_svr \
    \
    && apt-get remove --purge -y \
        gcc-7 g++-7 make cmake \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/* /tmp/*
EOF
else
    cat >> ./Dockerfile << 'EOF'
    && curl -skL --retry 3 ${ASTYLE_URL} | tar xz -C /tmp \
    && cd /tmp/astyle/build/gcc \
    && make \
    && mv bin/astyle /usr/local/bin \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/* /tmp/*
EOF
fi

echo
echo Building image "'${NAME}'"
echo
docker build -t "${NAME}" .
echo


if [[ "${name}" == "saturn" ]] || [[ "${name}" == "saturn-nightly" ]]; then
    if [[ "${push}" == "push" ]]; then
        TAG=${ECR_URL}/saturn/${NAME}

        docker tag ${NAME} ${TAG}
        $(aws ecr get-login --no-include-email --region us-east-1)

        echo Pushing ${TAG} to AWS
        docker push ${TAG}
    fi
else
    curl --user ${gituser} -s https://raw.githubusercontent.com/xadrnd/mars/master/docker/pyinstall.py -o ./pyinstall.py
    python ./pyinstall.py \
        --imgname=${name} \
        --imgversion=${version} \
        --cmd=${name}
fi

rm -f mars.tar.gz mars.zip
rm -f saturn.tar.gz saturn.zip
rm -f name version Dockerfile pyinstall.py
rm -rf mars saturn saturn-version
rm -f /tmp/version

